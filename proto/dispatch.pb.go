// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dispatch.proto

package dispatch

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Option struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3fbf3dcaa8c6dfa, []int{0}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

type URL struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URL) Reset()         { *m = URL{} }
func (m *URL) String() string { return proto.CompactTextString(m) }
func (*URL) ProtoMessage()    {}
func (*URL) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3fbf3dcaa8c6dfa, []int{1}
}

func (m *URL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URL.Unmarshal(m, b)
}
func (m *URL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URL.Marshal(b, m, deterministic)
}
func (m *URL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URL.Merge(m, src)
}
func (m *URL) XXX_Size() int {
	return xxx_messageInfo_URL.Size(m)
}
func (m *URL) XXX_DiscardUnknown() {
	xxx_messageInfo_URL.DiscardUnknown(m)
}

var xxx_messageInfo_URL proto.InternalMessageInfo

func (m *URL) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type URLs struct {
	Url                  []*URL   `protobuf:"bytes,1,rep,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLs) Reset()         { *m = URLs{} }
func (m *URLs) String() string { return proto.CompactTextString(m) }
func (*URLs) ProtoMessage()    {}
func (*URLs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3fbf3dcaa8c6dfa, []int{2}
}

func (m *URLs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLs.Unmarshal(m, b)
}
func (m *URLs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLs.Marshal(b, m, deterministic)
}
func (m *URLs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLs.Merge(m, src)
}
func (m *URLs) XXX_Size() int {
	return xxx_messageInfo_URLs.Size(m)
}
func (m *URLs) XXX_DiscardUnknown() {
	xxx_messageInfo_URLs.DiscardUnknown(m)
}

var xxx_messageInfo_URLs proto.InternalMessageInfo

func (m *URLs) GetUrl() []*URL {
	if m != nil {
		return m.Url
	}
	return nil
}

type URLInfoMap struct {
	Urlmap               map[string]string `protobuf:"bytes,1,rep,name=urlmap,proto3" json:"urlmap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *URLInfoMap) Reset()         { *m = URLInfoMap{} }
func (m *URLInfoMap) String() string { return proto.CompactTextString(m) }
func (*URLInfoMap) ProtoMessage()    {}
func (*URLInfoMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3fbf3dcaa8c6dfa, []int{3}
}

func (m *URLInfoMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLInfoMap.Unmarshal(m, b)
}
func (m *URLInfoMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLInfoMap.Marshal(b, m, deterministic)
}
func (m *URLInfoMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLInfoMap.Merge(m, src)
}
func (m *URLInfoMap) XXX_Size() int {
	return xxx_messageInfo_URLInfoMap.Size(m)
}
func (m *URLInfoMap) XXX_DiscardUnknown() {
	xxx_messageInfo_URLInfoMap.DiscardUnknown(m)
}

var xxx_messageInfo_URLInfoMap proto.InternalMessageInfo

func (m *URLInfoMap) GetUrlmap() map[string]string {
	if m != nil {
		return m.Urlmap
	}
	return nil
}

func init() {
	proto.RegisterType((*Option)(nil), "Option")
	proto.RegisterType((*URL)(nil), "URL")
	proto.RegisterType((*URLs)(nil), "URLs")
	proto.RegisterType((*URLInfoMap)(nil), "URLInfoMap")
	proto.RegisterMapType((map[string]string)(nil), "URLInfoMap.UrlmapEntry")
}

func init() { proto.RegisterFile("dispatch.proto", fileDescriptor_b3fbf3dcaa8c6dfa) }

var fileDescriptor_b3fbf3dcaa8c6dfa = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0xd7, 0xb5, 0x76, 0xfa, 0x0a, 0x22, 0x1f, 0xa2, 0x5d, 0x0f, 0x32, 0x73, 0xda, 0x29,
	0xc2, 0xbc, 0xa8, 0x77, 0x0f, 0x4a, 0x44, 0x08, 0xe4, 0x0f, 0x88, 0x1a, 0xdd, 0xb0, 0x36, 0x21,
	0x4d, 0xc5, 0xfd, 0xf7, 0xd2, 0xac, 0x63, 0xbd, 0xbd, 0xef, 0xbd, 0x77, 0x78, 0xbf, 0x0f, 0xa7,
	0x1f, 0x9b, 0xd6, 0xe9, 0xf0, 0xbe, 0xe6, 0xce, 0xdb, 0x60, 0xd9, 0x31, 0xf2, 0x57, 0x17, 0x36,
	0xb6, 0x61, 0x73, 0xa4, 0x4a, 0x0a, 0x22, 0x64, 0x4e, 0x87, 0x75, 0x99, 0x2c, 0x92, 0xe5, 0x89,
	0x8c, 0x9a, 0x5d, 0x21, 0x53, 0x52, 0xb4, 0x74, 0x81, 0xb4, 0xf3, 0x75, 0x99, 0x2c, 0xd2, 0x65,
	0xb1, 0xca, 0xb8, 0x92, 0x42, 0xf6, 0x06, 0xfb, 0x03, 0x94, 0x14, 0x4f, 0xcd, 0xa7, 0x7d, 0xd1,
	0x8e, 0x6e, 0x90, 0x77, 0xbe, 0xfe, 0xd1, 0x6e, 0x28, 0x5e, 0xf2, 0x43, 0xc8, 0x55, 0x4c, 0x1e,
	0x9b, 0xe0, 0xb7, 0x72, 0xa8, 0x55, 0xf7, 0x28, 0x46, 0x36, 0x9d, 0x21, 0xfd, 0x36, 0xdb, 0x61,
	0x40, 0x2f, 0xe9, 0x1c, 0x47, 0xbf, 0xba, 0xee, 0x4c, 0x39, 0x8d, 0xde, 0xee, 0x78, 0x98, 0xde,
	0x25, 0xab, 0x67, 0x60, 0x0f, 0x64, 0x3c, 0xcd, 0x91, 0x7f, 0x99, 0xd0, 0x53, 0xcc, 0xf8, 0x8e,
	0xaa, 0x8a, 0x2b, 0xd9, 0x84, 0xae, 0x31, 0x73, 0xb6, 0x8d, 0x59, 0x31, 0xda, 0x53, 0xed, 0x8b,
	0x6c, 0xf2, 0x96, 0xc7, 0x8f, 0xdc, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x25, 0x46, 0xff, 0x2d,
	0x23, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DispatcherClient is the client API for Dispatcher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DispatcherClient interface {
	GetURL(ctx context.Context, in *Option, opts ...grpc.CallOption) (*URL, error)
	PostURL(ctx context.Context, in *URLInfoMap, opts ...grpc.CallOption) (*Option, error)
}

type dispatcherClient struct {
	cc *grpc.ClientConn
}

func NewDispatcherClient(cc *grpc.ClientConn) DispatcherClient {
	return &dispatcherClient{cc}
}

func (c *dispatcherClient) GetURL(ctx context.Context, in *Option, opts ...grpc.CallOption) (*URL, error) {
	out := new(URL)
	err := c.cc.Invoke(ctx, "/dispatcher/getURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dispatcherClient) PostURL(ctx context.Context, in *URLInfoMap, opts ...grpc.CallOption) (*Option, error) {
	out := new(Option)
	err := c.cc.Invoke(ctx, "/dispatcher/postURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DispatcherServer is the server API for Dispatcher service.
type DispatcherServer interface {
	GetURL(context.Context, *Option) (*URL, error)
	PostURL(context.Context, *URLInfoMap) (*Option, error)
}

func RegisterDispatcherServer(s *grpc.Server, srv DispatcherServer) {
	s.RegisterService(&_Dispatcher_serviceDesc, srv)
}

func _Dispatcher_GetURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Option)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatcherServer).GetURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dispatcher/GetURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatcherServer).GetURL(ctx, req.(*Option))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dispatcher_PostURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(URLInfoMap)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatcherServer).PostURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dispatcher/PostURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatcherServer).PostURL(ctx, req.(*URLInfoMap))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dispatcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dispatcher",
	HandlerType: (*DispatcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getURL",
			Handler:    _Dispatcher_GetURL_Handler,
		},
		{
			MethodName: "postURL",
			Handler:    _Dispatcher_PostURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dispatch.proto",
}
